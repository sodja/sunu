<?php

namespace Sunu\ClientBundle\Repository;

/**
 * ClientRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ClientRepository extends \Doctrine\ORM\EntityRepository
{

//api mobile liste des clients
public function getClientParTailleur($id)
{
    $queryBuilder = $this->getEntityManager()->createQueryBuilder();

    $query = $queryBuilder 
    ->select('c.nom','c.prenom','c.telephone','c.adresse') 
    ->from ('SunuClientBundle:Client','c')
    ->innerJoin('c.iduser', 'u')
    ->Where('u.id = :iduser')
    ->setParameter('iduser',$id)
    ->andWhere('c.statut = :cltstatut')
    ->setParameter('cltstatut','actif')
    ->getQuery()
   ;


return $query
 ->getResult()
;
}

//api mobile supprimer client
public function getSuppClientParTailleur($id,$client)
{
    $queryBuilder = $this->getEntityManager()->createQueryBuilder();

    $query = $queryBuilder 
    ->select('c.telephone') 
    ->from ('SunuClientBundle:Client','c')
    ->innerJoin('c.iduser', 'u')
    ->Where('u.id = :iduser')
    ->setParameter('iduser',$id)
    ->andWhere('c.telephone = :numclt')
    ->setParameter('numclt',$client)
    ->getQuery()
   ;


return $query
 ->getResult()
;
}

public function getAllUserClient()
{
 
    $queryBuilder = $this->getEntityManager()->createQueryBuilder();

    $query = $queryBuilder 
    ->select('COUNT(cl) as nbre','u.nom','u.prenom','u.username')
    ->from ('SunuClientBundle:Client','cl')
    ->innerJoin('cl.iduser', 'u')
    ->innerJoin('u.compte', 'c')
    ->innerJoin('c.typeCompte', 'tc') 
    ->Where('tc.libelleTypeCompte = :idtypecompte')
    ->setParameter('idtypecompte','Tailleur')
    ->groupBy('cl.iduser')
   ;


return $query
 ->getQuery()
 ->getResult()
;
}

public function getAllUserlisteClient()
{
 
    $queryBuilder = $this->getEntityManager()->createQueryBuilder();

    $query = $queryBuilder 
    ->select('COUNT(u) as nbreuser','u.username')
    ->from ('SunuClientBundle:Client','cl')
    ->innerJoin('cl.iduser', 'u')
    ->Where('COUNT(cl) < :nbre')
    ->setParameter('nbre',100)
    ->groupBy('cl.iduser')
   ;


return $query
 ->getQuery()
 ->getResult()
;
}
}
